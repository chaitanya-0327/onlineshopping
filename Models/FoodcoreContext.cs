// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Foodcore.Models
{
    public partial class lifestyleContext : DbContext
    {
        public lifestyleContext()
        {
        }

        public lifestyleContext(DbContextOptions<lifestyleContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Admintable> Admintables { get; set; }
        public virtual DbSet<Cart> Carts { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<Myorder> Myorders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Register> Registers { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=CHAITANYA\\SQLEXPRESS;Initial Catalog=lifestyle;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Admintable>(entity =>
            {
                entity.HasKey(e => e.Adminid)
                    .HasName("PK__admintab__AD040D7E3939348D");

                entity.ToTable("admintable");

                entity.HasIndex(e => e.Adminemail, "UQ__admintab__755F6BC3900D32C2")
                    .IsUnique();

                entity.Property(e => e.Adminid)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("adminid");

                entity.Property(e => e.Adminemail)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("adminemail");

                entity.Property(e => e.Adminname)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("adminname");

                entity.Property(e => e.Adminpwd)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("adminpwd");
            });

            modelBuilder.Entity<Cart>(entity =>
            {
                entity.ToTable("cart");

                entity.Property(e => e.Cartid).HasColumnName("cartid");

                entity.Property(e => e.Email)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Itemid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("itemid");

                entity.HasOne(d => d.EmailNavigation)
                    .WithMany(p => p.Carts)
                    .HasPrincipalKey(p => p.Email)
                    .HasForeignKey(d => d.Email)
                    .HasConstraintName("FK__cart__email__4AB81AF0");

                entity.HasOne(d => d.Item)
                    .WithMany(p => p.Carts)
                    .HasForeignKey(d => d.Itemid)
                    .HasConstraintName("FK__cart__itemid__4BAC3F29");
            });

            modelBuilder.Entity<Feedback>(entity =>
            {
                entity.HasKey(e => e.Sino)
                    .HasName("PK__feedback__8A62EEC6A7C0BE20");

                entity.ToTable("feedback");

                entity.Property(e => e.Sino).HasColumnName("SINO");

                entity.Property(e => e.Email)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Feedback1)
                    .IsUnicode(false)
                    .HasColumnName("feedback");

                entity.Property(e => e.Productid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("productid");

                entity.HasOne(d => d.EmailNavigation)
                    .WithMany(p => p.Feedbacks)
                    .HasPrincipalKey(p => p.Email)
                    .HasForeignKey(d => d.Email)
                    .HasConstraintName("FK__feedback__email__70DDC3D8");

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.Feedbacks)
                    .HasForeignKey(d => d.Productid)
                    .HasConstraintName("FK__feedback__produc__6FE99F9F");
            });

            modelBuilder.Entity<Myorder>(entity =>
            {
                entity.HasKey(e => e.Orderid)
                    .HasName("PK__myorders__080E37754E954D73");

                entity.ToTable("myorders");

                entity.Property(e => e.Orderid).HasColumnName("orderid");

                entity.Property(e => e.Email)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Itemid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("itemid");

                entity.Property(e => e.Price).HasColumnName("price");

                entity.Property(e => e.Qty).HasColumnName("qty");

                entity.HasOne(d => d.EmailNavigation)
                    .WithMany(p => p.Myorders)
                    .HasPrincipalKey(p => p.Email)
                    .HasForeignKey(d => d.Email)
                    .HasConstraintName("FK__myorders__email__46E78A0C");

                entity.HasOne(d => d.Item)
                    .WithMany(p => p.Myorders)
                    .HasForeignKey(d => d.Itemid)
                    .HasConstraintName("FK__myorders__itemid__47DBAE45");
            });

            modelBuilder.Entity<Product>(entity =>
            {
                entity.ToTable("products");

                entity.Property(e => e.Productid)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("productid");

                entity.Property(e => e.Category)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("category");

                entity.Property(e => e.Images)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("images");

                entity.Property(e => e.Price).HasColumnName("price");

                entity.Property(e => e.Productdesc)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("productdesc");

                entity.Property(e => e.Productname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("productname");
            });

            modelBuilder.Entity<Register>(entity =>
            {
                entity.HasKey(e => e.Username)
                    .HasName("PK__register__F3DBC57380718EC9");

                entity.ToTable("register");

                entity.HasIndex(e => e.Email, "UQ__register__AB6E616482E3D31B")
                    .IsUnique();

                entity.Property(e => e.Username)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("username");

                entity.Property(e => e.Dob)
                    .HasColumnType("date")
                    .HasColumnName("dob");

                entity.Property(e => e.Email)
                    .IsRequired()
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("email");

                entity.Property(e => e.Gender).HasColumnName("gender");

                entity.Property(e => e.Nationality)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("nationality");

                entity.Property(e => e.Phone)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("phone");

                entity.Property(e => e.Pwd)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("pwd");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}